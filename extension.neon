rules:
	- PHPStan\Rules\Symfony\ContainerInterfacePrivateServiceRule
	- PHPStan\Rules\Symfony\ContainerInterfaceUnknownServiceRule

services:
	# service map
	symfony.serviceMapFactory:
		class: PHPStan\Symfony\ServiceMapFactory
		factory: PHPStan\Symfony\XmlServiceMapFactory(%symfony.container_xml_path%)
	-
		class: PHPStan\Symfony\ServiceMap(@symfony.serviceMapFactory::create())

	# ControllerTrait::get()/has() return type
	-
		class: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Component\DependencyInjection\ContainerInterface)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		class: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\Controller)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
	-
		class: PHPStan\Type\Symfony\ServiceDynamicReturnTypeExtension(Symfony\Bundle\FrameworkBundle\Controller\AbstractController)
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

	# ControllerTrait::has() type specification
	-
		class: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Component\DependencyInjection\ContainerInterface)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
	-
		class: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Bundle\FrameworkBundle\Controller\Controller)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]
	-
		class: PHPStan\Type\Symfony\ServiceTypeSpecifyingExtension(Symfony\Bundle\FrameworkBundle\Controller\AbstractController)
		tags: [phpstan.typeSpecifier.methodTypeSpecifyingExtension]

	# Request::getContent() return type
	-
		class: PHPStan\Type\Symfony\RequestDynamicReturnTypeExtension
		tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
